#!/usr/bin/env ruby

require_relative 'cellect_env'
require 'fileutils'

class CellectStart
  include CellectEnv

  def initialize
    setup_new_relic_config
    setup_env_vars
    setup_puma_cmd
  end

  def run
    if ENV['DEBUG_CELLECT_START']
      p @env_vars
      p @puma_cmd
    end
    exec(@env_vars, @puma_cmd)
  end

  private

  def setup_puma_cmd
    @puma_cmd = "puma -b tcp://0.0.0.0:#{puma_port} -t 0:#{puma_max_threads} -C config/puma.rb"
  end

  def puma_port
    ENV['PUMA_PORT'] || 4000
  end

  def puma_max_threads
    max_threads = ENV['PUMA_MAX_THREADS'] || @pg_pool
    if max_threads.nil? || max_threads.to_s.empty?
      16
    else
      max_threads.to_i
    end
  end

  def setup_new_relic_config
    source_path = '/production_config/newrelic.yml'
    return unless File.exist?(source_path)
    dest_path = '/cellect_panoptes/newrelic.yml'
    dest_exists_as_file_or_link = File.exist?(dest_path) || File.symlink?(dest_path)
    return if dest_exists_as_file_or_link
    FileUtils.ln_sf(source_path, dest_path)
  rescue Errno::ENOENT => e
    p e.message
  end
end

CellectStart.new.run
